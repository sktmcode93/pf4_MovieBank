{"version":3,"sources":["Component/Loading.jsx","Component/MovieHeader.jsx","Component/Genres.jsx","Component/MovieBox.jsx","Component/MovieDetail.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","MovieHeader","props","onClick","selectList","makingGenres","data","map","genre","idx","Genres","genres","drawList","movieList","selectMovie","movie","makingMovie","src","medium_cover_image","alt","title","id","title_long","rating","synopsis","MovieBox","removeDetail","document","querySelector","style","display","MovieDetail","type","value","description_full","App","state","page","paragraph","renderMovies","a","app","classList","add","callApi","setState","movies","setPage","remove","changeActive","datas","count","movie_count","limit","lastPage","Math","ceil","url","fetch","then","res","json","e","target","nextSibling","innerText","list","selectPage","currentPage","Number","calculPage","renderPage","currentPara","lastPara","floor","callList","console","log","p","querySelectorAll","forEach","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.268b4b42.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"loading\">\r\n            <h1>자료를 불러오고 있습니다...</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React from 'react';\r\n\r\nconst MovieHeader = (props) => {\r\n    return(\r\n        <div className=\"mb-header\">\r\n            <div className=\"container\">\r\n                <h1 className=\"mb-header-title\">MovieBank</h1>\r\n                <ul>\r\n                    <li onClick={props.selectList}>최신순</li>\r\n                    <li onClick={props.selectList}>평점순</li>\r\n                    <li onClick={props.selectList}>다운로드순</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MovieHeader;","import React from 'react';\r\n\r\nconst Genres = (props) => {\r\n    return(\r\n        <ul> Genres : {makingGenres(props.genres)}</ul>\r\n    )\r\n}\r\nconst makingGenres = (data) => {\r\n    const genres = data.map((genre,idx) => {\r\n        return <li key={idx}>{genre}</li>\r\n    })\r\n    return genres;\r\n}\r\nexport default Genres;\r\n","import React from 'react';\r\nimport './MovieBox.css';\r\nimport MovieHeader from './MovieHeader';\r\nimport Genres from './Genres';\r\nimport Pages from './Pages';\r\n\r\nconst MovieBox = (props) => {\r\n    return(\r\n        <div className=\"moviebox\">\r\n            <MovieHeader selectList={props.selectList}/>\r\n            <div className=\"container\">\r\n                {/* <Pages paragraph={props.paragraph} selectPage={props.selectPage}/> */}\r\n                <div className=\"movie-main\">\r\n                    {drawList(props.movieList, props.selectMovie)}\r\n                </div>\r\n                {/* <Pages paragraph={props.paragraph} selectPage={props.selectPage}/> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst drawList = (movieList, selectMovie) => {\r\n    const list = movieList.map(movie =>{\r\n        return makingMovie(movie, selectMovie);\r\n    })\r\n    return list;\r\n}\r\nconst makingMovie = (movie, selectMovie) => {\r\n    return(\r\n        <div className=\"mb-movie\" key={movie.id}>\r\n            <div className=\"mb-movie-poster\">\r\n                <img src={movie.medium_cover_image} alt={movie.title} onClick={selectMovie}/>\r\n                <div className=\"mb-movie-id\">{movie.id}</div>\r\n            </div>\r\n            <div className=\"mb-movie-info\">\r\n                <h2>{movie.title_long}</h2>\r\n                <span>Rating : {movie.rating}</span>\r\n                <p>{movie.synopsis}</p>\r\n                <Genres genres={movie.genres}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieBox;","import React from 'react';\r\nimport Genres from './Genres';\r\n\r\nconst MovieDetail = ({display}) => {\r\n    return(\r\n        <div className=\"movie-detail\">\r\n            <div className=\"container\">\r\n                <input type=\"button\" className=\"movie-detail-cancel\" value=\"x\" onClick={removeDetail}/>\r\n                <div className=\"movie-detail-box\">\r\n                    <figure className=\"movie-detail-poster\">\r\n                        <img src={display.medium_cover_image} alt={display.title}/>\r\n                        <figcaption className=\"md-title\">{display.title_long}</figcaption>\r\n                    </figure>\r\n                    <div className=\"movie-detail-info\">\r\n                        <span className=\"md-info-rating\">Rating : {display.rating}</span>\r\n                        <p className=\"md-info-description\">{display.description_full}</p>\r\n                        <Genres genres={display.genres}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst removeDetail = () => {\r\n    document.querySelector(\".movie-detail\").style.display = \"none\";\r\n}\r\nexport default MovieDetail;","import React, {Component} from 'react';\nimport './reset.css';\nimport './App.css';\nimport Loading from './Component/Loading';\nimport MovieBox from './Component/MovieBox';\nimport MovieDetail from './Component/MovieDetail';\n\nclass App extends Component {\n  state = {\n    page : 1,\n    paragraph : 1\n  }\n  componentDidMount(){\n    this.renderMovies();\n  }\n  renderMovies = async () => {\n    const app = document.querySelector(\".App\");\n    app.classList.add(\"while-loading\");\n    const movieList = await this.callApi('https://yts.mx/api/v2/list_movies.json?');\n    this.setState({movieList : movieList.movies})\n    this.setPage(movieList);\n    app.classList.remove(\"while-loading\");\n    this.changeActive(1);\n  }\n  setPage = (datas) => {\n    const count = datas.movie_count;\n    const limit = datas.limit;\n    const lastPage = Math.ceil(count/limit);\n    this.setState({lastPage});\n  }\n  callApi = (url) => {\n    this.setState({url});\n    return fetch(url)\n    .then(res => res.json())\n    .then(json =>json.data);\n  }\n  selectMovie = async (e) => {\n    const app = document.querySelector(\".App\");\n    app.classList.add(\"while-loading\");\n    const id = e.target.nextSibling.innerText;\n    const display = await this.callApi(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n    this.setState({display : display.movie})\n    document.querySelector(\".movie-detail\").style.display = \"block\";\n    app.classList.remove(\"while-loading\");\n  }\n  selectList = async (e) => {\n    const app = document.querySelector(\".App\");\n    app.classList.add(\"while-loading\");\n    const list = e.target.innerText;\n    let movieList;\n    if(list === \"최신순\"){\n      movieList = await this.callApi(`https://yts.mx/api/v2/list_movies.json?sort_by=year`);\n    }else if(list === \"평점순\"){\n      movieList = await this.callApi(`https://yts.mx/api/v2/list_movies.json?sort_by=rating`);\n    }else{\n      movieList = await this.callApi(`https://yts.mx/api/v2/list_movies.json?sort_by=downlad_count`);\n    }\n    this.setState({movieList : movieList.movies});\n    app.classList.remove(\"while-loading\");\n  }\n  selectPage = async (e) => {\n    // 같은 페이지 클릭시 리턴\n    const currentPage = this.state.page;\n    const target = e.target.innerText;\n    if(currentPage === Number(target)) return;\n    await this.calculPage(currentPage, target);\n    this.renderPage();\n  }\n  calculPage = async (currentPage, target) => {\n    const currentPara = this.state.paragraph;\n    const lastPara = Math.floor((this.state.lastPage-1)/10) + 1;\n    if(target === \"<\"){\n      if(currentPage >1) await this.setState({page : currentPage-1});\n      if(Math.floor(((currentPage-1)/10)) !== (Math.floor((this.state.page-1)/10))) await this.setState({paragraph: this.state.paragraph-1});\n    }else if(target === \">\"){\n      if(currentPage < this.state.lastPage) await this.setState({page : currentPage+1});\n      if(Math.floor(((currentPage-1)/10)) !== (Math.floor((this.state.page-1)/10))) await this.setState({paragraph : this.state.paragraph+1});\n    }else if(target === \"<<\"){\n      if(currentPara > 1){\n        const paragraph = currentPara -1;\n        const page = (paragraph-1)*10 +1;\n        await this.setState({paragraph, page});\n      }\n    }else if(target === \">>\"){\n      if(currentPara < lastPara){\n        const paragraph = currentPara +1;\n        const page = (paragraph-1)*10 +1;\n        await this.setState({paragraph,page});\n      }\n    }else{\n      await this.setState({page : Number(target)})\n    }\n    this.changeActive(this.state.page);\n  }\n  renderPage = async () => {\n    const loadingPage = this.state.page;\n    const app = document.querySelector(\".App\");\n    app.classList.add(\"while-loading\");\n    const callList = await this.callApi(`https://yts.mx/api/v2/list_movies.json?sort_by=downlad_count`).movies;\n    this.setState({movieList : callList});\n    console.log(this.state.movieList)\n    app.classList.remove(\"while-loading\");\n  }\n  changeActive = (p) => {\n    const ps = document.querySelectorAll(\".pages li\");\n    ps.forEach(page =>{\n      page.classList.remove(\"active\");\n      if(page.innerText == p) page.classList.add(\"active\");\n    });\n  }\n  render(){\n    return(\n      <div className=\"App\">\n        {this.state.movieList ?\n        <MovieBox\n          movieList={this.state.movieList}\n          selectMovie={this.selectMovie}\n          selectList={this.selectList}\n          paragraph={this.state.paragraph}\n          selectPage={this.selectPage}\n        /> : <Loading/>}\n        {this.state.display ? <MovieDetail display={this.state.display}/> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}